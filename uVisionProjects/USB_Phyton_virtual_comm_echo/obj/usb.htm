<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\obj\usb.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\obj\usb.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 4.1 [Build 561]: Last Updated: Mon Feb 13 11:42:47 2012
<BR><P>
<H3>Maximum Stack Usage =        160 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
USB_DeviceSetupPacket &rArr; USB_CDC_GetDescriptor &rArr; USB_EP_doDataIn &rArr; USB_EP_sendInDataPortion &rArr; USB_EP_SetReady &rArr; USB_SetSEPxCTRL
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[86]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[6]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">NMI_Handler</a><BR>
 <LI><a href="#[7]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">HardFault_Handler</a><BR>
 <LI><a href="#[8]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">SVC_Handler</a><BR>
 <LI><a href="#[9]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">PendSV_Handler</a><BR>
 <LI><a href="#[a]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">SysTick_Handler</a><BR>
 <LI><a href="#[10]">DMA_IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">DMA_IRQ_Handler</a><BR>
 <LI><a href="#[11]">UART1_IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">UART1_IRQ_Handler</a><BR>
 <LI><a href="#[12]">UART2_IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">UART2_IRQ_Handler</a><BR>
 <LI><a href="#[13]">SPI1_IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[13]">SPI1_IRQ_Handler</a><BR>
 <LI><a href="#[1f]">SPI2_IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f]">SPI2_IRQ_Handler</a><BR>
 <LI><a href="#[1e]">SPI3_IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1e]">SPI3_IRQ_Handler</a><BR>
 <LI><a href="#[16]">PWR_IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[16]">PWR_IRQ_Handler</a><BR>
 <LI><a href="#[17]">WWDG_IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[17]">WWDG_IRQ_Handler</a><BR>
 <LI><a href="#[19]">TIM1_IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[19]">TIM1_IRQ_Handler</a><BR>
 <LI><a href="#[1a]">TIM2_IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1a]">TIM2_IRQ_Handler</a><BR>
 <LI><a href="#[1b]">TIM3_IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b]">TIM3_IRQ_Handler</a><BR>
 <LI><a href="#[18]">TIM4_IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18]">TIM4_IRQ_Handler</a><BR>
 <LI><a href="#[1c]">ADC_IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC_IRQ_Handler</a><BR>
 <LI><a href="#[24]">BKP_IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[24]">BKP_IRQ_Handler</a><BR>
 <LI><a href="#[25]">EXT1_IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25]">EXT1_IRQ_Handler</a><BR>
 <LI><a href="#[b]">MILSTD1553B1_IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">MILSTD1553B1_IRQ_Handler</a><BR>
 <LI><a href="#[c]">MILSTD1553B2_IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">MILSTD1553B2_IRQ_Handler</a><BR>
 <LI><a href="#[e]">CAN1_IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">CAN1_IRQ_Handler</a><BR>
 <LI><a href="#[f]">CAN2_IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f]">CAN2_IRQ_Handler</a><BR>
 <LI><a href="#[14]">NAND_IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[14]">NAND_IRQ_Handler</a><BR>
 <LI><a href="#[15]">ARINCR_IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">ARINCR_IRQ_Handler</a><BR>
 <LI><a href="#[20]">ARINCT1_IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20]">ARINCT1_IRQ_Handler</a><BR>
 <LI><a href="#[21]">ARINCT2_IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21]">ARINCT2_IRQ_Handler</a><BR>
 <LI><a href="#[23]">ARINCT4_IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[23]">ARINCT4_IRQ_Handler</a><BR>
 <LI><a href="#[1d]">ETH_IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d]">ETH_IRQ_Handler</a><BR>
 <LI><a href="#[26]">EXT2_IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[26]">EXT2_IRQ_Handler</a><BR>
 <LI><a href="#[27]">EXT3_IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[27]">EXT3_IRQ_Handler</a><BR>
 <LI><a href="#[28]">EXT4_IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[28]">EXT4_IRQ_Handler</a><BR>
 <LI><a href="#[22]">ARINCT3_IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22]">ARINCT3_IRQ_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC_IRQ_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[15]">ARINCR_IRQ_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[20]">ARINCT1_IRQ_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[21]">ARINCT2_IRQ_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[22]">ARINCT3_IRQ_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[23]">ARINCT4_IRQ_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[24]">BKP_IRQ_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[e]">CAN1_IRQ_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[f]">CAN2_IRQ_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[10]">DMA_IRQ_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[1d]">ETH_IRQ_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[25]">EXT1_IRQ_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[26]">EXT2_IRQ_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[27]">EXT3_IRQ_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[28]">EXT4_IRQ_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[7]">HardFault_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[b]">MILSTD1553B1_IRQ_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[c]">MILSTD1553B2_IRQ_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[14]">NAND_IRQ_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[6]">NMI_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[16]">PWR_IRQ_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[5]">Reset_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[13]">SPI1_IRQ_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[1f]">SPI2_IRQ_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[1e]">SPI3_IRQ_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[a]">SysTick_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[19]">TIM1_IRQ_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[1a]">TIM2_IRQ_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[1b]">TIM3_IRQ_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[18]">TIM4_IRQ_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[11]">UART1_IRQ_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[12]">UART2_IRQ_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[2f]">USB_CDC_DoDataOut</a> from 1986be9x_usb_cdc.o(.text) referenced from 1986be9x_usb_cdc.o(.text)
 <LI><a href="#[2c]">USB_CDC_OnDataReceive</a> from 1986be9x_usb_cdc.o(.text) referenced from 1986be9x_usb_cdc.o(.text)
 <LI><a href="#[2d]">USB_CDC_OnDataSent</a> from 1986be9x_usb_cdc.o(.text) referenced from 1986be9x_usb_cdc.o(.text)
 <LI><a href="#[2e]">USB_DeviceDoStatusOutAck</a> from 1986be9x_usb_device.o(.text) referenced from 1986be9x_usb_cdc.o(.text)
 <LI><a href="#[2b]">USB_DeviceSetupPacket</a> from 1986be9x_usb_device.o(.text) referenced from 1986be9x_usb_device.o(.text)
 <LI><a href="#[2a]">USB_Device_setAddressWork</a> from 1986be9x_usb_device.o(.text) referenced from 1986be9x_usb_device.o(.text)
 <LI><a href="#[d]">USB_IRQHandler</a> from 1986be9x_usb_device.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[17]">WWDG_IRQ_Handler</a> from startup.o(.text) referenced from startup.o(RESET)
 <LI><a href="#[30]">__main</a> from __main.o(!!!main) referenced from startup.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[30]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[31]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[33]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[89]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[8a]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[34]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[8b]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[38]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[8c]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[8d]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000028))

<P><STRONG><a name="[8e]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[8f]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[90]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[91]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[92]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[93]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[94]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[95]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))

<P><STRONG><a name="[96]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[97]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[98]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[99]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[9a]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[9b]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002F))

<P><STRONG><a name="[9c]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[9d]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[9e]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[3d]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[9f]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[a0]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[a1]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[a2]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[a3]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[a4]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[32]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[a5]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[35]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[37]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[a6]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[39]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; Setup_USB &rArr; USB_CDC_Reset &rArr; USB_EP_doDataOut &rArr; USB_EP_Idle &rArr; USB_EP_SetReady &rArr; USB_SetSEPxCTRL
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a7]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[88]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[3c]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[a8]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[3e]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[3a]"></a>main</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = main &rArr; Setup_USB &rArr; USB_CDC_Reset &rArr; USB_EP_doDataOut &rArr; USB_EP_Idle &rArr; USB_EP_SetReady &rArr; USB_SetSEPxCTRL
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_CDC_Init
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VCom_Configuration
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup_CPU_Clock
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup_USB
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[51]"></a>USB_CDC_RecieveData</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = USB_CDC_RecieveData &rArr; USB_CDC_SendData &rArr; USB_EP_doDataIn &rArr; USB_EP_sendInDataPortion &rArr; USB_EP_SetReady &rArr; USB_SetSEPxCTRL
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_CDC_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_CDC_OnDataReceive
</UL>

<P><STRONG><a name="[84]"></a>USB_CDC_GetLineCoding</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_CDC_ClassRequest
</UL>

<P><STRONG><a name="[83]"></a>USB_CDC_SetLineCoding</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_CDC_SetLineCoding
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_CDC_DoDataOut
</UL>

<P><STRONG><a name="[5]"></a>Reset_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMA_IRQ_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>UART1_IRQ_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>UART2_IRQ_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>SPI1_IRQ_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>SPI2_IRQ_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>SPI3_IRQ_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>PWR_IRQ_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>WWDG_IRQ_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WWDG_IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WWDG_IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TIM1_IRQ_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TIM2_IRQ_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TIM3_IRQ_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIM4_IRQ_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC_IRQ_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>BKP_IRQ_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKP_IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKP_IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>EXT1_IRQ_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT1_IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT1_IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>MILSTD1553B1_IRQ_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MILSTD1553B1_IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MILSTD1553B1_IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>MILSTD1553B2_IRQ_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MILSTD1553B2_IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MILSTD1553B2_IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>CAN1_IRQ_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>CAN2_IRQ_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN2_IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN2_IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>NAND_IRQ_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAND_IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAND_IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>ARINCR_IRQ_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARINCR_IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARINCR_IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>ARINCT1_IRQ_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARINCT1_IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARINCT1_IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>ARINCT2_IRQ_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARINCT2_IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARINCT2_IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>ARINCT4_IRQ_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARINCT4_IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARINCT4_IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>ETH_IRQ_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[41]"></a>RST_CLK_PCLKcmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, opora_rst_clk.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_DeInit
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup_USB
</UL>

<P><STRONG><a name="[4e]"></a>RST_CLK_CPUclkSelection</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, opora_rst_clk.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_WarmDeInit
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup_CPU_Clock
</UL>

<P><STRONG><a name="[54]"></a>RST_CLK_GetFlagStatus</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, opora_rst_clk.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RST_CLK_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_USB_PLLstatus
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_LSIstatus
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_LSEstatus
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_HSIstatus
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_HSEstatus
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_CPU_PLLstatus
</UL>

<P><STRONG><a name="[53]"></a>RST_CLK_HSIstatus</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, opora_rst_clk.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_WarmDeInit
</UL>

<P><STRONG><a name="[56]"></a>RST_CLK_HSIcmd</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, opora_rst_clk.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_WarmDeInit
</UL>

<P><STRONG><a name="[55]"></a>RST_CLK_WarmDeInit</STRONG> (Thumb, 74 bytes, Stack size 4 bytes, opora_rst_clk.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_HSIcmd
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_HSIstatus
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_CPUclkSelection
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_DeInit
</UL>

<P><STRONG><a name="[57]"></a>RST_CLK_DeInit</STRONG> (Thumb, 44 bytes, Stack size 4 bytes, opora_rst_clk.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_WarmDeInit
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_PCLKcmd
</UL>

<P><STRONG><a name="[47]"></a>RST_CLK_HSEconfig</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, opora_rst_clk.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup_CPU_Clock
</UL>

<P><STRONG><a name="[48]"></a>RST_CLK_HSEstatus</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, opora_rst_clk.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RST_CLK_HSEstatus &rArr; RST_CLK_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup_CPU_Clock
</UL>

<P><STRONG><a name="[a9]"></a>RST_CLK_LSEconfig</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, opora_rst_clk.o(.text), UNUSED)

<P><STRONG><a name="[58]"></a>RST_CLK_LSEstatus</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, opora_rst_clk.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_GetFlagStatus
</UL>

<P><STRONG><a name="[aa]"></a>RST_CLK_HSIadjust</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, opora_rst_clk.o(.text), UNUSED)

<P><STRONG><a name="[ab]"></a>RST_CLK_LSIcmd</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, opora_rst_clk.o(.text), UNUSED)

<P><STRONG><a name="[59]"></a>RST_CLK_LSIstatus</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, opora_rst_clk.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_GetFlagStatus
</UL>

<P><STRONG><a name="[49]"></a>RST_CLK_CPU_PLLconfig</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, opora_rst_clk.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RST_CLK_CPU_PLLconfig
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup_CPU_Clock
</UL>

<P><STRONG><a name="[4d]"></a>RST_CLK_CPU_PLLuse</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, opora_rst_clk.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup_CPU_Clock
</UL>

<P><STRONG><a name="[4a]"></a>RST_CLK_CPU_PLLcmd</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, opora_rst_clk.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup_CPU_Clock
</UL>

<P><STRONG><a name="[4b]"></a>RST_CLK_CPU_PLLstatus</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, opora_rst_clk.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RST_CLK_CPU_PLLstatus &rArr; RST_CLK_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup_CPU_Clock
</UL>

<P><STRONG><a name="[4c]"></a>RST_CLK_CPUclkPrescaler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, opora_rst_clk.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup_CPU_Clock
</UL>

<P><STRONG><a name="[ac]"></a>RST_CLK_USB_PLLconfig</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, opora_rst_clk.o(.text), UNUSED)

<P><STRONG><a name="[ad]"></a>RST_CLK_USB_PLLuse</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, opora_rst_clk.o(.text), UNUSED)

<P><STRONG><a name="[ae]"></a>RST_CLK_USB_PLLcmd</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, opora_rst_clk.o(.text), UNUSED)

<P><STRONG><a name="[5a]"></a>RST_CLK_USB_PLLstatus</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, opora_rst_clk.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_GetFlagStatus
</UL>

<P><STRONG><a name="[af]"></a>RST_CLK_USBclkPrescaler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, opora_rst_clk.o(.text), UNUSED)

<P><STRONG><a name="[b0]"></a>RST_CLK_USBclkEnable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, opora_rst_clk.o(.text), UNUSED)

<P><STRONG><a name="[b1]"></a>RST_CLK_ADCclkSelection</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, opora_rst_clk.o(.text), UNUSED)

<P><STRONG><a name="[b2]"></a>RST_CLK_ADCclkPrescaler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, opora_rst_clk.o(.text), UNUSED)

<P><STRONG><a name="[b3]"></a>RST_CLK_ADCclkEnable</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, opora_rst_clk.o(.text), UNUSED)

<P><STRONG><a name="[b4]"></a>RST_CLK_HSIclkPrescaler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, opora_rst_clk.o(.text), UNUSED)

<P><STRONG><a name="[b5]"></a>RST_CLK_RTC_HSIclkEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, opora_rst_clk.o(.text), UNUSED)

<P><STRONG><a name="[b6]"></a>RST_CLK_HSEclkPrescaler</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, opora_rst_clk.o(.text), UNUSED)

<P><STRONG><a name="[b7]"></a>RST_CLK_RTC_HSEclkEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, opora_rst_clk.o(.text), UNUSED)

<P><STRONG><a name="[5b]"></a>RST_CLK_GetClocksFreq</STRONG> (Thumb, 448 bytes, Stack size 56 bytes, opora_rst_clk.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[7a]"></a>USB_BRGInit</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DeviceInit
</UL>

<P><STRONG><a name="[5e]"></a>USB_SetHSCR</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DevicePowerOff
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Reset
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DevicePowerOn
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DeviceInit
</UL>

<P><STRONG><a name="[5d]"></a>USB_Reset</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, 1986be9x_usb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetHSCR
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DeviceInit
</UL>

<P><STRONG><a name="[b8]"></a>USB_GetHSCR</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[b9]"></a>USB_GetHSVR</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[ba]"></a>USB_GetHTXC</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[bb]"></a>USB_SetHTXC</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[bc]"></a>USB_GetHTXT</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[bd]"></a>USB_SetHTXT</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[be]"></a>USB_GetHTXLC</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[bf]"></a>USB_SetHTXLC</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[c0]"></a>USB_GetHTXSE</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[c1]"></a>USB_SetHTXSE</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[c2]"></a>USB_GetHTXA</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[c3]"></a>USB_SetHTXA</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[c4]"></a>USB_GetHTXE</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[c5]"></a>USB_SetHTXE</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[c6]"></a>USB_GetHFN</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[c7]"></a>USB_GetHIS</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[c8]"></a>USB_SetHIS</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[c9]"></a>USB_GetHIM</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[ca]"></a>USB_SetHIM</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[cb]"></a>USB_GetHRXS</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[cc]"></a>USB_GetHRXP</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[cd]"></a>USB_GetHRXA</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[ce]"></a>USB_GetHRXE</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[cf]"></a>USB_GetHRXCS</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[d0]"></a>USB_GetHSTM</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[d1]"></a>USB_GetHRXFD</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[d2]"></a>USB_GetHRXFDC</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[d3]"></a>USB_GetHRXFC</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[d4]"></a>USB_SetHRXFC</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[d5]"></a>USB_GetHTXFD</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[d6]"></a>USB_SetHTXFD</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[d7]"></a>USB_GetHTXFC</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[d8]"></a>USB_SetHTXFC</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[70]"></a>USB_GetSEPxCTRL</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_dispatchEvent
</UL>

<P><STRONG><a name="[60]"></a>USB_SetSEPxCTRL</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, 1986be9x_usb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_SetSEPxCTRL
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_Reset
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_Init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_sendInDataPortion
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_SetReady
</UL>

<P><STRONG><a name="[6e]"></a>USB_GetSEPxSTS</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_dispatchEvent
</UL>

<P><STRONG><a name="[6f]"></a>USB_GetSEPxTS</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_dispatchEvent
</UL>

<P><STRONG><a name="[d9]"></a>USB_GetSEPxNTS</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[da]"></a>USB_GetSC</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[7b]"></a>USB_SetSC</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DeviceInit
</UL>

<P><STRONG><a name="[db]"></a>USB_GetSLS</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[7e]"></a>USB_GetSIS</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DeviceDispatchEvent
</UL>

<P><STRONG><a name="[63]"></a>USB_SetSIS</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DeviceDispatchEvent
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_SetReady
</UL>

<P><STRONG><a name="[dc]"></a>USB_GetSIM</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[43]"></a>USB_SetSIM</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup_USB
</UL>

<P><STRONG><a name="[dd]"></a>USB_GetSA</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[75]"></a>USB_SetSA</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Device_setAddressWork
</UL>

<P><STRONG><a name="[de]"></a>USB_GetSFN</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[73]"></a>USB_GetSEPxRXFD</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_dispatchEvent
</UL>

<P><STRONG><a name="[72]"></a>USB_GetSEPxRXFDC</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_dispatchEvent
</UL>

<P><STRONG><a name="[df]"></a>USB_GetSEPxRXFC</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[74]"></a>USB_SetSEPxRXFC</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_dispatchEvent
</UL>

<P><STRONG><a name="[e0]"></a>USB_GetSEPxTXFD</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[69]"></a>USB_SetSEPxTXFD</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_sendInDataPortion
</UL>

<P><STRONG><a name="[e1]"></a>USB_GetSEPxTXFDC</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text), UNUSED)

<P><STRONG><a name="[67]"></a>USB_SetSEPxTXFDC</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_sendInDataPortion
</UL>

<P><STRONG><a name="[68]"></a>USB_SEPxToggleEPDATASEQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, 1986be9x_usb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_sendInDataPortion
</UL>

<P><STRONG><a name="[5f]"></a>USB_EP_Init</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, 1986be9x_usb_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_EP_Init &rArr; USB_SetSEPxCTRL
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetSEPxCTRL
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DeviceInit
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_CDC_Reset
</UL>

<P><STRONG><a name="[61]"></a>USB_EP_Reset</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, 1986be9x_usb_device.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetSEPxCTRL
</UL>

<P><STRONG><a name="[64]"></a>USB_EP_Idle</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, 1986be9x_usb_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USB_EP_Idle &rArr; USB_EP_SetReady &rArr; USB_SetSEPxCTRL
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_SetReady
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DeviceClearFeature
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_dispatchEvent
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_setSetupHandler
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_doDataOut
</UL>

<P><STRONG><a name="[65]"></a>USB_EP_Stall</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, 1986be9x_usb_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USB_EP_Stall &rArr; USB_EP_SetReady &rArr; USB_SetSEPxCTRL
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_SetReady
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_CDC_ReceiveStop
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DeviceSetFeature
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_dispatchEvent
</UL>

<P><STRONG><a name="[6a]"></a>USB_EP_doDataIn</STRONG> (Thumb, 68 bytes, Stack size 40 bytes, 1986be9x_usb_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = USB_EP_doDataIn &rArr; USB_EP_sendInDataPortion &rArr; USB_EP_SetReady &rArr; USB_SetSEPxCTRL
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_sendInDataPortion
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_CDC_DoDataOut
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_CDC_GetDescriptor
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_CDC_ClassRequest
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DeviceSetupPacket
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_CDC_SendData
</UL>

<P><STRONG><a name="[6b]"></a>USB_EP_doDataOut</STRONG> (Thumb, 48 bytes, Stack size 40 bytes, 1986be9x_usb_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = USB_EP_doDataOut &rArr; USB_EP_Idle &rArr; USB_EP_SetReady &rArr; USB_SetSEPxCTRL
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_Idle
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_CDC_ReceiveStart
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_CDC_OnDataReceive
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_CDC_ClassRequest
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DeviceDoStatusOutAck
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DeviceSetupPacket
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_CDC_Reset
</UL>

<P><STRONG><a name="[6c]"></a>USB_EP_setSetupHandler</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, 1986be9x_usb_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = USB_EP_setSetupHandler &rArr; USB_EP_Idle &rArr; USB_EP_SetReady &rArr; USB_SetSEPxCTRL
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_Idle
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DeviceInit
</UL>

<P><STRONG><a name="[6d]"></a>USB_EP_dispatchEvent</STRONG> (Thumb, 636 bytes, Stack size 48 bytes, 1986be9x_usb_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = USB_EP_dispatchEvent &rArr; USB_EP_Stall &rArr; USB_EP_SetReady &rArr; USB_SetSEPxCTRL
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_Stall
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_Idle
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_sendInDataPortion
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_SetReady
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetSEPxRXFC
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetSEPxRXFDC
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetSEPxRXFD
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetSEPxTS
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetSEPxSTS
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetSEPxCTRL
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DeviceDispatchEvent
</UL>

<P><STRONG><a name="[76]"></a>USB_DeviceSetFeature</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, 1986be9x_usb_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = USB_DeviceSetFeature &rArr; USB_EP_Stall &rArr; USB_EP_SetReady &rArr; USB_SetSEPxCTRL
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_Stall
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DeviceSetupPacket
</UL>

<P><STRONG><a name="[77]"></a>USB_DeviceClearFeature</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, 1986be9x_usb_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USB_DeviceClearFeature &rArr; USB_EP_Idle &rArr; USB_EP_SetReady &rArr; USB_SetSEPxCTRL
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_Idle
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DeviceSetupPacket
</UL>

<P><STRONG><a name="[2b]"></a>USB_DeviceSetupPacket</STRONG> (Thumb, 598 bytes, Stack size 48 bytes, 1986be9x_usb_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = USB_DeviceSetupPacket &rArr; USB_CDC_GetDescriptor &rArr; USB_EP_doDataIn &rArr; USB_EP_sendInDataPortion &rArr; USB_EP_SetReady &rArr; USB_SetSEPxCTRL
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_CDC_GetDescriptor
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_CDC_ClassRequest
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DeviceClearFeature
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DeviceSetFeature
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_doDataOut
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_doDataIn
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 1986be9x_usb_device.o(.text)
</UL>
<P><STRONG><a name="[42]"></a>USB_DeviceInit</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, 1986be9x_usb_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = USB_DeviceInit &rArr; USB_EP_setSetupHandler &rArr; USB_EP_Idle &rArr; USB_EP_SetReady &rArr; USB_SetSEPxCTRL
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_setSetupHandler
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_Init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetSC
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Reset
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetHSCR
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_BRGInit
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup_USB
</UL>

<P><STRONG><a name="[44]"></a>USB_DevicePowerOn</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, 1986be9x_usb_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_DevicePowerOn
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetHSCR
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup_USB
</UL>

<P><STRONG><a name="[7c]"></a>USB_DevicePowerOff</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, 1986be9x_usb_device.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetHSCR
</UL>

<P><STRONG><a name="[7f]"></a>USB_DeviceReset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, 1986be9x_usb_device.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DeviceDispatchEvent
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_CDC_Reset
</UL>

<P><STRONG><a name="[e2]"></a>USB_DeviceSuspend</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, 1986be9x_usb_device.o(.text), UNUSED)

<P><STRONG><a name="[e3]"></a>USB_DeviceResume</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, 1986be9x_usb_device.o(.text), UNUSED)

<P><STRONG><a name="[e4]"></a>USB_DeviceDoStatusInAck</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_usb_device.o(.text), UNUSED)

<P><STRONG><a name="[2e]"></a>USB_DeviceDoStatusOutAck</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, 1986be9x_usb_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = USB_DeviceDoStatusOutAck &rArr; USB_EP_doDataOut &rArr; USB_EP_Idle &rArr; USB_EP_SetReady &rArr; USB_SetSEPxCTRL
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_doDataOut
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 1986be9x_usb_cdc.o(.text)
</UL>
<P><STRONG><a name="[7d]"></a>USB_DeviceDispatchEvent</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, 1986be9x_usb_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = USB_DeviceDispatchEvent &rArr; USB_EP_dispatchEvent &rArr; USB_EP_Stall &rArr; USB_EP_SetReady &rArr; USB_SetSEPxCTRL
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DeviceReset
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_dispatchEvent
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetSIS
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetSIS
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IRQHandler
</UL>

<P><STRONG><a name="[d]"></a>USB_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, 1986be9x_usb_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = USB_IRQHandler &rArr; USB_DeviceDispatchEvent &rArr; USB_EP_dispatchEvent &rArr; USB_EP_Stall &rArr; USB_EP_SetReady &rArr; USB_SetSEPxCTRL
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DeviceDispatchEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[e5]"></a>USB_DeviceDummyGetStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_usb_device.o(.text), UNUSED)

<P><STRONG><a name="[e6]"></a>USB_DeviceDummySetAddress</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_usb_device.o(.text), UNUSED)

<P><STRONG><a name="[e7]"></a>USB_DeviceDummyGetDescriptor</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, 1986be9x_usb_device.o(.text), UNUSED)

<P><STRONG><a name="[e8]"></a>USB_DeviceDummySetDescriptor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_usb_device.o(.text), UNUSED)

<P><STRONG><a name="[e9]"></a>USB_DeviceDummyGetConfiguration</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, 1986be9x_usb_device.o(.text), UNUSED)

<P><STRONG><a name="[ea]"></a>USB_DeviceDummySetConfiguration</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_usb_device.o(.text), UNUSED)

<P><STRONG><a name="[eb]"></a>USB_DeviceDummyGetInterface</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_usb_device.o(.text), UNUSED)

<P><STRONG><a name="[ec]"></a>USB_DeviceDummySetInterface</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_usb_device.o(.text), UNUSED)

<P><STRONG><a name="[ed]"></a>USB_DeviceDummySyncFrame</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_usb_device.o(.text), UNUSED)

<P><STRONG><a name="[ee]"></a>USB_DeviceDummyClassRequest</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, 1986be9x_usb_device.o(.text), UNUSED)

<P><STRONG><a name="[ef]"></a>USB_DeviceDummyVendorRequest</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, 1986be9x_usb_device.o(.text), UNUSED)

<P><STRONG><a name="[f0]"></a>USB_DeviceDummyDataError</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, 1986be9x_usb_device.o(.text), UNUSED)

<P><STRONG><a name="[80]"></a>USB_CDC_SetReceiveBuffer</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, 1986be9x_usb_cdc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_CDC_Init
</UL>

<P><STRONG><a name="[50]"></a>USB_CDC_Init</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, 1986be9x_usb_cdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USB_CDC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_CDC_SetReceiveBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[81]"></a>USB_CDC_ReceiveStart</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, 1986be9x_usb_cdc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_doDataOut
</UL>

<P><STRONG><a name="[82]"></a>USB_CDC_ReceiveStop</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, 1986be9x_usb_cdc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_Stall
</UL>

<P><STRONG><a name="[52]"></a>USB_CDC_SendData</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, 1986be9x_usb_cdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = USB_CDC_SendData &rArr; USB_EP_doDataIn &rArr; USB_EP_sendInDataPortion &rArr; USB_EP_SetReady &rArr; USB_SetSEPxCTRL
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_doDataIn
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_CDC_RecieveData
</UL>

<P><STRONG><a name="[45]"></a>USB_CDC_Reset</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, 1986be9x_usb_cdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = USB_CDC_Reset &rArr; USB_EP_doDataOut &rArr; USB_EP_Idle &rArr; USB_EP_SetReady &rArr; USB_SetSEPxCTRL
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DeviceReset
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_doDataOut
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup_USB
</UL>

<P><STRONG><a name="[78]"></a>USB_CDC_GetDescriptor</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, 1986be9x_usb_cdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = USB_CDC_GetDescriptor &rArr; USB_EP_doDataIn &rArr; USB_EP_sendInDataPortion &rArr; USB_EP_SetReady &rArr; USB_SetSEPxCTRL
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_doDataIn
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DeviceSetupPacket
</UL>

<P><STRONG><a name="[79]"></a>USB_CDC_ClassRequest</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, 1986be9x_usb_cdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = USB_CDC_ClassRequest &rArr; USB_EP_doDataIn &rArr; USB_EP_sendInDataPortion &rArr; USB_EP_SetReady &rArr; USB_SetSEPxCTRL
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_doDataOut
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_doDataIn
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_CDC_GetLineCoding
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DeviceSetupPacket
</UL>

<P><STRONG><a name="[f1]"></a>USB_CDC_DummyDataReceive</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_usb_cdc.o(.text), UNUSED)

<P><STRONG><a name="[f2]"></a>USB_CDC_DummyDataSent</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, 1986be9x_usb_cdc.o(.text), UNUSED)

<P><STRONG><a name="[f3]"></a>USB_CDC_DummyGetLineCoding</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_usb_cdc.o(.text), UNUSED)

<P><STRONG><a name="[f4]"></a>USB_CDC_DummySetLineCoding</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_usb_cdc.o(.text), UNUSED)

<P><STRONG><a name="[f5]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[5c]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_GetClocksFreq
</UL>

<P><STRONG><a name="[f6]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[f7]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[f8]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[f9]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[fa]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[36]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[3b]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[fb]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[85]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[fc]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3f]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[fd]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[fe]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[71]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, 1986be9x_usb_device.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DeviceSetupPacket
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_dispatchEvent
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[40]"></a>Setup_USB</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Setup_USB &rArr; USB_CDC_Reset &rArr; USB_EP_doDataOut &rArr; USB_EP_Idle &rArr; USB_EP_SetReady &rArr; USB_SetSEPxCTRL
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetSIM
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DevicePowerOn
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DeviceInit
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_CDC_Reset
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_PCLKcmd
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[46]"></a>Setup_CPU_Clock</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Setup_CPU_Clock &rArr; RST_CLK_HSEstatus &rArr; RST_CLK_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_HSEstatus
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_HSEconfig
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_CPUclkSelection
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_CPUclkPrescaler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_CPU_PLLuse
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_CPU_PLLstatus
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_CPU_PLLconfig
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_CPU_PLLcmd
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4f]"></a>VCom_Configuration</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26]"></a>EXT2_IRQ_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT2_IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT2_IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>EXT3_IRQ_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT3_IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT3_IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>EXT4_IRQ_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT4_IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT4_IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>ARINCT3_IRQ_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARINCT3_IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARINCT3_IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>USB_EP_SetReady</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, 1986be9x_usb_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USB_EP_SetReady &rArr; USB_SetSEPxCTRL
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetSIS
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetSEPxCTRL
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_dispatchEvent
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_Stall
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_Idle
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_sendInDataPortion
</UL>

<P><STRONG><a name="[66]"></a>USB_EP_sendInDataPortion</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, 1986be9x_usb_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USB_EP_sendInDataPortion &rArr; USB_EP_SetReady &rArr; USB_SetSEPxCTRL
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_SetReady
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SEPxToggleEPDATASEQ
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetSEPxTXFDC
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetSEPxTXFD
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetSEPxCTRL
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_dispatchEvent
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_doDataIn
</UL>

<P><STRONG><a name="[2a]"></a>USB_Device_setAddressWork</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, 1986be9x_usb_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_Device_setAddressWork
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetSA
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 1986be9x_usb_device.o(.text)
</UL>
<P><STRONG><a name="[2c]"></a>USB_CDC_OnDataReceive</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, 1986be9x_usb_cdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = USB_CDC_OnDataReceive &rArr; USB_CDC_RecieveData &rArr; USB_CDC_SendData &rArr; USB_EP_doDataIn &rArr; USB_EP_sendInDataPortion &rArr; USB_EP_SetReady &rArr; USB_SetSEPxCTRL
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_doDataOut
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_CDC_RecieveData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 1986be9x_usb_cdc.o(.text)
</UL>
<P><STRONG><a name="[2d]"></a>USB_CDC_OnDataSent</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, 1986be9x_usb_cdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_CDC_OnDataSent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 1986be9x_usb_cdc.o(.text)
</UL>
<P><STRONG><a name="[2f]"></a>USB_CDC_DoDataOut</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, 1986be9x_usb_cdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = USB_CDC_DoDataOut &rArr; USB_EP_doDataIn &rArr; USB_EP_sendInDataPortion &rArr; USB_EP_SetReady &rArr; USB_SetSEPxCTRL
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP_doDataIn
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_CDC_SetLineCoding
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 1986be9x_usb_cdc.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[87]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
