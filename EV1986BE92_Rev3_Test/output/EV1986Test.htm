<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\output\EV1986Test.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\output\EV1986Test.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Tue Oct 01 17:52:33 2019
<BR><P>
<H3>Maximum Stack Usage =        168 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
Timer1_IRQHandler &rArr; LcdScrollString &rArr; LcdPutString &rArr; WriteData
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[5b]">MltDelay</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5b]">MltDelay</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[17]">ADC_IRQHandler</a> from 1986be9x_it.o(.text) referenced from startup_1986be9x.o(RESET)
 <LI><a href="#[1a]">BACKUP_IRQHandler</a> from 1986be9x_it.o(.text) referenced from startup_1986be9x.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from 1986be9x_it.o(.text) referenced from startup_1986be9x.o(RESET)
 <LI><a href="#[a]">CAN1_IRQHandler</a> from 1986be9x_it.o(.text) referenced from startup_1986be9x.o(RESET)
 <LI><a href="#[b]">CAN2_IRQHandler</a> from 1986be9x_it.o(.text) referenced from startup_1986be9x.o(RESET)
 <LI><a href="#[18]">COMPARATOR_IRQHandler</a> from 1986be9x_it.o(.text) referenced from startup_1986be9x.o(RESET)
 <LI><a href="#[d]">DMA_IRQHandler</a> from 1986be9x_it.o(.text) referenced from startup_1986be9x.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from 1986be9x_it.o(.text) referenced from startup_1986be9x.o(RESET)
 <LI><a href="#[1b]">EXT_INT1_IRQHandler</a> from 1986be9x_it.o(.text) referenced from startup_1986be9x.o(RESET)
 <LI><a href="#[1c]">EXT_INT2_IRQHandler</a> from 1986be9x_it.o(.text) referenced from startup_1986be9x.o(RESET)
 <LI><a href="#[1d]">EXT_INT3_IRQHandler</a> from 1986be9x_it.o(.text) referenced from startup_1986be9x.o(RESET)
 <LI><a href="#[1e]">EXT_INT4_IRQHandler</a> from 1986be9x_it.o(.text) referenced from startup_1986be9x.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from 1986be9x_it.o(.text) referenced from startup_1986be9x.o(RESET)
 <LI><a href="#[11]">I2C_IRQHandler</a> from 1986be9x_it.o(.text) referenced from startup_1986be9x.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from 1986be9x_it.o(.text) referenced from startup_1986be9x.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from 1986be9x_it.o(.text) referenced from startup_1986be9x.o(RESET)
 <LI><a href="#[12]">POWER_IRQHandler</a> from 1986be9x_it.o(.text) referenced from startup_1986be9x.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from 1986be9x_it.o(.text) referenced from startup_1986be9x.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_1986be9x.o(.text) referenced from startup_1986be9x.o(RESET)
 <LI><a href="#[10]">SSP1_IRQHandler</a> from 1986be9x_it.o(.text) referenced from startup_1986be9x.o(RESET)
 <LI><a href="#[19]">SSP2_IRQHandler</a> from 1986be9x_it.o(.text) referenced from startup_1986be9x.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from 1986be9x_it.o(.text) referenced from startup_1986be9x.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from 1986be9x_it.o(.text) referenced from startup_1986be9x.o(RESET)
 <LI><a href="#[20]">SystemInit</a> from system_1986be9x.o(.text) referenced from startup_1986be9x.o(.text)
 <LI><a href="#[14]">Timer1_IRQHandler</a> from 1986be9x_it.o(.text) referenced from startup_1986be9x.o(RESET)
 <LI><a href="#[15]">Timer2_IRQHandler</a> from 1986be9x_it.o(.text) referenced from startup_1986be9x.o(RESET)
 <LI><a href="#[16]">Timer3_IRQHandler</a> from 1986be9x_it.o(.text) referenced from startup_1986be9x.o(RESET)
 <LI><a href="#[e]">UART1_IRQHandler</a> from 1986be9x_it.o(.text) referenced from startup_1986be9x.o(RESET)
 <LI><a href="#[f]">UART2_IRQHandler</a> from 1986be9x_it.o(.text) referenced from startup_1986be9x.o(RESET)
 <LI><a href="#[c]">USB_IRQHandler</a> from 1986be9x_it.o(.text) referenced from startup_1986be9x.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from 1986be9x_it.o(.text) referenced from startup_1986be9x.o(RESET)
 <LI><a href="#[13]">WWDG_IRQHandler</a> from 1986be9x_it.o(.text) referenced from startup_1986be9x.o(RESET)
 <LI><a href="#[21]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_1986be9x.o(.text)
 <LI><a href="#[1f]">main</a> from main.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[21]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_1986be9x.o(.text)
</UL>
<P><STRONG><a name="[64]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[22]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[63]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[65]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[66]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[67]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[68]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[69]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[29]"></a>Delay</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlinkLED1
</UL>

<P><STRONG><a name="[24]"></a>LEDOn</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlinkLED1
</UL>

<P><STRONG><a name="[26]"></a>LEDOff</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlinkLED1
</UL>

<P><STRONG><a name="[28]"></a>BlinkLED1</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = BlinkLED1 &rArr; Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDOff
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDOn
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedTest
</UL>

<P><STRONG><a name="[2a]"></a>Uart2PinCfg</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Uart2PinCfg &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartTest
</UL>

<P><STRONG><a name="[2c]"></a>Can2PinCfg</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Can2PinCfg &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can2Test
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can1Test
</UL>

<P><STRONG><a name="[2d]"></a>MltPinCfg</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = MltPinCfg &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2e]"></a>LedPinGfg</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
</UL>

<P><STRONG><a name="[2f]"></a>ButtonPinGfg</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ButtonPinGfg &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[30]"></a>Uart2Setup</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Uart2Setup &rArr; UART_Init &rArr; RST_CLK_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Cmd
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_BRGInit
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_PCLKcmd
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_CPU_PLLconfig
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartTest
</UL>

<P><STRONG><a name="[36]"></a>Can2Setup</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Can2Setup &rArr; RST_CLK_CPU_PLLstatus
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_PCLKcmd
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_CPUclkSelection
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_CPUclkPrescaler
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_CPU_PLLuse
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_CPU_PLLstatus
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_CPU_PLLconfig
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_CPU_PLLcmd
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can2Test
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can1Test
</UL>

<P><STRONG><a name="[3c]"></a>Tim1Setup</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Tim1Setup
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_PCLKcmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3d]"></a>UartTest</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = UartTest &rArr; Uart2PinCfg &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendData
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReceiveData
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetFlagStatus
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_ReadInputDataBit
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2Setup
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2PinCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[42]"></a>Can1Test</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Can1Test &rArr; Can2PinCfg &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_HSIstatus
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_HSIcmd
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_CPUclkSelection
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_ReadInputDataBit
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can2Setup
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can2PinCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[45]"></a>Can2Test</STRONG> (Thumb, 212 bytes, Stack size 32 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Can2Test &rArr; Can2PinCfg &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_HSIstatus
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_HSIcmd
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_CPUclkSelection
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_ReadInputDataBit
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can2Setup
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can2PinCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[46]"></a>LedTest</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = LedTest &rArr; BlinkLED1 &rArr; Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_ReadInputDataBit
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlinkLED1
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1f]"></a>main</STRONG> (Thumb, 436 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = main &rArr; Can2Test &rArr; Can2PinCfg &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadStatus
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_PCLKcmd
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_LSEstatus
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_LSEconfig
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_HSEstatus
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_HSEconfig
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_ReadInputDataBit
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdInit
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearChip
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispOn
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedTest
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can2Test
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can1Test
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartTest
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim1Setup
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonPinGfg
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MltPinCfg
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlinkLED1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[4f]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, system_1986be9x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[20]"></a>SystemInit</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, system_1986be9x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_1986be9x.o(.text)
</UL>
<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_1986be9x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_1986be9x.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>UART_DeInit</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, 1986be9x_uart.o(.text), UNUSED)

<P><STRONG><a name="[34]"></a>UART_Init</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, 1986be9x_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UART_Init &rArr; RST_CLK_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2Setup
</UL>

<P><STRONG><a name="[6b]"></a>UART_StructInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, 1986be9x_uart.o(.text), UNUSED)

<P><STRONG><a name="[35]"></a>UART_Cmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, 1986be9x_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2Setup
</UL>

<P><STRONG><a name="[6c]"></a>UART_ITConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, 1986be9x_uart.o(.text), UNUSED)

<P><STRONG><a name="[6d]"></a>UART_GetITStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, 1986be9x_uart.o(.text), UNUSED)

<P><STRONG><a name="[6e]"></a>UART_GetITStatusMasked</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, 1986be9x_uart.o(.text), UNUSED)

<P><STRONG><a name="[6f]"></a>UART_ClearITPendingBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, 1986be9x_uart.o(.text), UNUSED)

<P><STRONG><a name="[70]"></a>UART_DMAConfig</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, 1986be9x_uart.o(.text), UNUSED)

<P><STRONG><a name="[71]"></a>UART_DMACmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, 1986be9x_uart.o(.text), UNUSED)

<P><STRONG><a name="[41]"></a>UART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, 1986be9x_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartTest
</UL>

<P><STRONG><a name="[40]"></a>UART_ReceiveData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartTest
</UL>

<P><STRONG><a name="[72]"></a>UART_BreakLine</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, 1986be9x_uart.o(.text), UNUSED)

<P><STRONG><a name="[51]"></a>UART_IrDAConfig</STRONG> (Thumb, 40 bytes, Stack size 32 bytes, 1986be9x_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_GetClocksFreq
</UL>

<P><STRONG><a name="[73]"></a>UART_IrDACmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, 1986be9x_uart.o(.text), UNUSED)

<P><STRONG><a name="[3f]"></a>UART_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, 1986be9x_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartTest
</UL>

<P><STRONG><a name="[33]"></a>UART_BRGInit</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, 1986be9x_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2Setup
</UL>

<P><STRONG><a name="[74]"></a>PORT_DeInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, 1986be9x_port.o(.text), UNUSED)

<P><STRONG><a name="[2b]"></a>PORT_Init</STRONG> (Thumb, 378 bytes, Stack size 48 bytes, 1986be9x_port.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = PORT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonPinGfg
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedPinGfg
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MltPinCfg
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can2PinCfg
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2PinCfg
</UL>

<P><STRONG><a name="[75]"></a>PORT_StructInit</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, 1986be9x_port.o(.text), UNUSED)

<P><STRONG><a name="[3e]"></a>PORT_ReadInputDataBit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, 1986be9x_port.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedTest
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can2Test
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can1Test
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartTest
</UL>

<P><STRONG><a name="[76]"></a>PORT_ReadInputData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, 1986be9x_port.o(.text), UNUSED)

<P><STRONG><a name="[25]"></a>PORT_SetBits</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, 1986be9x_port.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAdress
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispOff
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadStatus
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdInit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispOn
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDOn
</UL>

<P><STRONG><a name="[27]"></a>PORT_ResetBits</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, 1986be9x_port.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAdress
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispOff
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadStatus
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdInit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispOn
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDOff
</UL>

<P><STRONG><a name="[77]"></a>PORT_WriteBit</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, 1986be9x_port.o(.text), UNUSED)

<P><STRONG><a name="[78]"></a>PORT_Write</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, 1986be9x_port.o(.text), UNUSED)

<P><STRONG><a name="[32]"></a>RST_CLK_PCLKcmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, 1986be9x_rst_clk.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_DeInit
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim1Setup
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can2Setup
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2Setup
</UL>

<P><STRONG><a name="[3b]"></a>RST_CLK_CPUclkSelection</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, 1986be9x_rst_clk.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_WarmDeInit
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can2Test
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can1Test
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can2Setup
</UL>

<P><STRONG><a name="[52]"></a>RST_CLK_GetFlagStatus</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, 1986be9x_rst_clk.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_USB_PLLstatus
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_LSIstatus
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_LSEstatus
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_HSIstatus
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_HSEstatus
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_CPU_PLLstatus
</UL>

<P><STRONG><a name="[44]"></a>RST_CLK_HSIstatus</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, 1986be9x_rst_clk.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RST_CLK_HSIstatus
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_WarmDeInit
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can2Test
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can1Test
</UL>

<P><STRONG><a name="[43]"></a>RST_CLK_HSIcmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_rst_clk.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_WarmDeInit
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can2Test
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can1Test
</UL>

<P><STRONG><a name="[53]"></a>RST_CLK_WarmDeInit</STRONG> (Thumb, 52 bytes, Stack size 4 bytes, 1986be9x_rst_clk.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_HSIstatus
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_HSIcmd
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_CPUclkSelection
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_DeInit
</UL>

<P><STRONG><a name="[54]"></a>RST_CLK_DeInit</STRONG> (Thumb, 34 bytes, Stack size 4 bytes, 1986be9x_rst_clk.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_WarmDeInit
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_PCLKcmd
</UL>

<P><STRONG><a name="[49]"></a>RST_CLK_HSEconfig</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, 1986be9x_rst_clk.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4a]"></a>RST_CLK_HSEstatus</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, 1986be9x_rst_clk.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RST_CLK_HSEstatus
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[47]"></a>RST_CLK_LSEconfig</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, 1986be9x_rst_clk.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[48]"></a>RST_CLK_LSEstatus</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, 1986be9x_rst_clk.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RST_CLK_LSEstatus
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[79]"></a>RST_CLK_HSIadjust</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, 1986be9x_rst_clk.o(.text), UNUSED)

<P><STRONG><a name="[7a]"></a>RST_CLK_LSIcmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_rst_clk.o(.text), UNUSED)

<P><STRONG><a name="[55]"></a>RST_CLK_LSIstatus</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, 1986be9x_rst_clk.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_GetFlagStatus
</UL>

<P><STRONG><a name="[31]"></a>RST_CLK_CPU_PLLconfig</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, 1986be9x_rst_clk.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can2Setup
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2Setup
</UL>

<P><STRONG><a name="[3a]"></a>RST_CLK_CPU_PLLuse</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_rst_clk.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can2Setup
</UL>

<P><STRONG><a name="[38]"></a>RST_CLK_CPU_PLLcmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_rst_clk.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can2Setup
</UL>

<P><STRONG><a name="[39]"></a>RST_CLK_CPU_PLLstatus</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, 1986be9x_rst_clk.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RST_CLK_CPU_PLLstatus
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can2Setup
</UL>

<P><STRONG><a name="[37]"></a>RST_CLK_CPUclkPrescaler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, 1986be9x_rst_clk.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can2Setup
</UL>

<P><STRONG><a name="[7b]"></a>RST_CLK_USB_PLLconfig</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, 1986be9x_rst_clk.o(.text), UNUSED)

<P><STRONG><a name="[7c]"></a>RST_CLK_USB_PLLuse</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_rst_clk.o(.text), UNUSED)

<P><STRONG><a name="[7d]"></a>RST_CLK_USB_PLLcmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_rst_clk.o(.text), UNUSED)

<P><STRONG><a name="[56]"></a>RST_CLK_USB_PLLstatus</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, 1986be9x_rst_clk.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RST_CLK_GetFlagStatus
</UL>

<P><STRONG><a name="[7e]"></a>RST_CLK_USBclkPrescaler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_rst_clk.o(.text), UNUSED)

<P><STRONG><a name="[7f]"></a>RST_CLK_USBclkEnable</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_rst_clk.o(.text), UNUSED)

<P><STRONG><a name="[80]"></a>RST_CLK_ADCclkSelection</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, 1986be9x_rst_clk.o(.text), UNUSED)

<P><STRONG><a name="[81]"></a>RST_CLK_ADCclkPrescaler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, 1986be9x_rst_clk.o(.text), UNUSED)

<P><STRONG><a name="[82]"></a>RST_CLK_ADCclkEnable</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_rst_clk.o(.text), UNUSED)

<P><STRONG><a name="[83]"></a>RST_CLK_HSIclkPrescaler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, 1986be9x_rst_clk.o(.text), UNUSED)

<P><STRONG><a name="[84]"></a>RST_CLK_RTC_HSIclkEnable</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_rst_clk.o(.text), UNUSED)

<P><STRONG><a name="[85]"></a>RST_CLK_HSEclkPrescaler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, 1986be9x_rst_clk.o(.text), UNUSED)

<P><STRONG><a name="[86]"></a>RST_CLK_RTC_HSEclkEnable</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, 1986be9x_rst_clk.o(.text), UNUSED)

<P><STRONG><a name="[50]"></a>RST_CLK_GetClocksFreq</STRONG> (Thumb, 344 bytes, Stack size 16 bytes, 1986be9x_rst_clk.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RST_CLK_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IrDAConfig
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, 1986be9x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_1986be9x.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, 1986be9x_it.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_1986be9x.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, 1986be9x_it.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_1986be9x.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, 1986be9x_it.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_1986be9x.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, 1986be9x_it.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_1986be9x.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, 1986be9x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_1986be9x.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, 1986be9x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_1986be9x.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, 1986be9x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_1986be9x.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, 1986be9x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_1986be9x.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>CAN1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, 1986be9x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_1986be9x.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>CAN2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, 1986be9x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_1986be9x.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>USB_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, 1986be9x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_1986be9x.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>DMA_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, 1986be9x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_1986be9x.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>UART1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, 1986be9x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_1986be9x.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>UART2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, 1986be9x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_1986be9x.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>SSP1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, 1986be9x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_1986be9x.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>I2C_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, 1986be9x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_1986be9x.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>POWER_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, 1986be9x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_1986be9x.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>WWDG_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, 1986be9x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_1986be9x.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>Timer1_IRQHandler</STRONG> (Thumb, 730 bytes, Stack size 24 bytes, 1986be9x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Timer1_IRQHandler &rArr; LcdScrollString &rArr; LcdPutString &rArr; WriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdScrollString
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPutString
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPutImage
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPutChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_1986be9x.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>Timer2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, 1986be9x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_1986be9x.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>Timer3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, 1986be9x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_1986be9x.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>ADC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, 1986be9x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_1986be9x.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>COMPARATOR_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, 1986be9x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_1986be9x.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>SSP2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, 1986be9x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_1986be9x.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>BACKUP_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, 1986be9x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_1986be9x.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>EXT_INT1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, 1986be9x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_1986be9x.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>EXT_INT2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, 1986be9x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_1986be9x.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>EXT_INT3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, 1986be9x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_1986be9x.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>EXT_INT4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, 1986be9x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_1986be9x.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>SetDataBits</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, mlt_lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAdress
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispOff
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispOn
</UL>

<P><STRONG><a name="[5b]"></a>MltDelay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mlt_lcd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MltDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAdress
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispOff
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MltDelay
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadStatus
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdInit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispOn
</UL>

<P><STRONG><a name="[4c]"></a>ReadStatus</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, mlt_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MltDelay
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_SetBits
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearPage
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPutString
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPutImage
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPutChar
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdInit
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4d]"></a>DispOn</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, mlt_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DispOn
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MltDelay
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDataBits
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_SetBits
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5d]"></a>DispOff</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, mlt_lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MltDelay
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDataBits
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_SetBits
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_ResetBits
</UL>

<P><STRONG><a name="[5e]"></a>SetPage</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, mlt_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SetPage
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MltDelay
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDataBits
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_SetBits
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearPage
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPutString
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPutImage
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPutChar
</UL>

<P><STRONG><a name="[5f]"></a>SetAdress</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, mlt_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SetAdress
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MltDelay
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDataBits
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_SetBits
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearPage
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPutString
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPutImage
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPutChar
</UL>

<P><STRONG><a name="[60]"></a>WriteData</STRONG> (Thumb, 202 bytes, Stack size 32 bytes, mlt_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MltDelay
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDataBits
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_SetBits
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearPage
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPutString
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPutImage
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPutChar
</UL>

<P><STRONG><a name="[61]"></a>ReadData</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, mlt_lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MltDelay
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDataBits
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_SetBits
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_ResetBits
</UL>

<P><STRONG><a name="[4b]"></a>LcdInit</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, mlt_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LcdInit &rArr; ReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MltDelay
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadStatus
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_SetBits
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[62]"></a>LcdClearPage</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, mlt_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LcdClearPage &rArr; WriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAdress
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearChip
</UL>

<P><STRONG><a name="[4e]"></a>LcdClearChip</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, mlt_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LcdClearChip &rArr; LcdClearPage &rArr; WriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdClearPage
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[58]"></a>LcdPutChar</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, mlt_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LcdPutChar &rArr; WriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAdress
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1_IRQHandler
</UL>

<P><STRONG><a name="[5a]"></a>LcdPutString</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, mlt_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LcdPutString &rArr; WriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAdress
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdScrollString
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1_IRQHandler
</UL>

<P><STRONG><a name="[59]"></a>LcdScrollString</STRONG> (Thumb, 128 bytes, Stack size 88 bytes, mlt_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = LcdScrollString &rArr; LcdPutString &rArr; WriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPutString
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1_IRQHandler
</UL>

<P><STRONG><a name="[57]"></a>LcdPutImage</STRONG> (Thumb, 118 bytes, Stack size 56 bytes, mlt_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = LcdPutImage &rArr; WriteData
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAdress
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPage
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1_IRQHandler
</UL>

<P><STRONG><a name="[23]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[87]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[88]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dclz77c.o(.text), UNUSED)

<P><STRONG><a name="[89]"></a>__decompress2</STRONG> (Thumb, 94 bytes, Stack size unknown bytes, __dclz77c.o(.text), UNUSED)

<P><STRONG><a name="[8a]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[8b]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[8c]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
